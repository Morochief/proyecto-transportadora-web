# =============================================================================
# Dockerfile para Frontend (Producci贸n)
# =============================================================================

# Etapa 1: Build
FROM node:18-alpine AS builder

WORKDIR /app

# Copiar package files
COPY frontend/package*.json ./

# Instalar dependencias
RUN npm install --legacy-peer-deps

# Copiar c贸digo fuente
COPY frontend/ .

# Build de producci贸n
ARG REACT_APP_API_URL
ARG REACT_APP_ENV=production
ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV REACT_APP_ENV=$REACT_APP_ENV

RUN npm run build

# Etapa 2: Servidor nginx
FROM nginx:alpine

# Copiar configuraci贸n nginx
COPY nginx.conf /etc/nginx/nginx.conf
COPY default.conf /etc/nginx/conf.d/default.conf

# Copiar build desde etapa anterior
COPY --from=builder /app/build /usr/share/nginx/html

# Crear usuario no-root
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Exponer puerto
EXPOSE 80

# Health check usando wget (ya incluido en nginx:alpine)
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1

CMD ["nginx", "-g", "daemon off;"]
