
services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: logistica
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mailhog:
    image: mailhog/mailhog:v1.0.1
    restart: always
    ports:
      - "8025:8025"

  pgadmin:
    image: dpage/pgadmin4:8.6
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.local
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - db

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    entrypoint: ["/docker-entrypoint.sh"]
    command: ["flask", "--app", "wsgi.py", "run", "--host=0.0.0.0", "--port=5000"]
    working_dir: /app
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    depends_on:
      - db
      - mailhog
    environment:
      FLASK_ENV: development
      FLASK_APP: wsgi.py
      DATABASE_URL: postgresql://postgres:postgres@db:5432/logistica
      JWT_SECRET_KEY: change-me
      SECRET_KEY: change-me
      CORS_ALLOW_ORIGINS: http://localhost:3000
      FRONTEND_URL: http://localhost:3000
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      TIMEZONE: America/Asuncion
      DEFAULT_ADMIN_EMAIL: admin@transportadora.local
      DEFAULT_ADMIN_USERNAME: admin
      STRUCTURED_LOGGING: "1"
      ACCESS_TOKEN_EXPIRES_MINUTES: 15
      REFRESH_TOKEN_EXPIRES_DAYS: 7
      PYTHONUNBUFFERED: "1"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://localhost:5000/api

  go-crt-api:
    build:
      context: ./go-crt-api
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/logistica?sslmode=disable
    ports:
      - "8080:8080"
    depends_on:
      - db
    volumes:
      - ./go-crt-api:/src

  pdf-service:
    build:
      context: ./go-crt-api
      dockerfile: Dockerfile.pdf
    ports:
      - "3002:3002"
    volumes:
      - ./go-crt-api:/src

volumes:
  pgdata:
